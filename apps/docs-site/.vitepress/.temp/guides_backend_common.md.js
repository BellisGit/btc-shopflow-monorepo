import { ssrRenderAttrs, ssrRenderStyle } from "vue/server-renderer";
import { useSSRContext } from "vue";
import { _ as _export_sfc } from "./plugin-vue_export-helper.1tPrXgE0.js";
const __pageData = JSON.parse('{"title":"Common Module (公共模块)","description":"","frontmatter":{"title":"Common Module (公共模块)","type":"guide","project":"backend","owner":"dev-team","created":"2025-10-13","updated":"2025-10-14","publish":true,"tags":["guides","backend","common","microservices"],"sidebar_label":"公共模块","sidebar_order":9,"sidebar_group":"guides-backend"},"headers":[],"relativePath":"guides/backend/common.md","filePath":"guides/backend/common.md","lastUpdated":1760420026000}');
const _sfc_main = { name: "guides/backend/common.md" };
function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${ssrRenderAttrs(_attrs)}><h1 id="common-module-公共模块" tabindex="-1">Common Module (公共模块) <a class="header-anchor" href="#common-module-公共模块" aria-label="Permalink to &quot;Common Module (公共模块)&quot;">​</a></h1><h2 id="_1-模块说明" tabindex="-1">1. 模块说明 <a class="header-anchor" href="#_1-模块说明" aria-label="Permalink to &quot;1. 模块说明&quot;">​</a></h2><p>Common模块是整个BTC Shop Flow 项目的<strong>核心公共模块</strong>，为所有业务服务提供通用的基础功能工具类和异步操作支持</p><h3 id="主要职责" tabindex="-1">主要职责 <a class="header-anchor" href="#主要职责" aria-label="Permalink to &quot;主要职责&quot;">​</a></h3><ul><li>提供通用的CRUD操作基类（BaseServiceBaseControllerBaseMapper）</li><li>封装异步数据操作功能（基于RabbitMQ）</li><li>提供统一的返回结果封装（DataResultJsonResult）</li><li>提供公共的工具类和异常处理</li><li>提供通用的配置和注解</li></ul><h2 id="_2-技术栈" tabindex="-1">2. 技术栈 <a class="header-anchor" href="#_2-技术栈" aria-label="Permalink to &quot;2. 技术栈&quot;">​</a></h2><h3 id="核心框架" tabindex="-1">核心框架 <a class="header-anchor" href="#核心框架" aria-label="Permalink to &quot;核心框架&quot;">​</a></h3><ul><li><strong>Spring Boot</strong>: 2.7.6</li><li><strong>Java</strong>: 17</li><li><strong>Maven</strong>: 项目构建工具</li></ul><h3 id="持久层" tabindex="-1">持久层 <a class="header-anchor" href="#持久层" aria-label="Permalink to &quot;持久层&quot;">​</a></h3><table tabindex="0"><thead><tr><th>技术</th><th>版本</th><th>说明</th></tr></thead><tbody><tr><td>MyBatis-Flex</td><td>1.11.1</td><td>MyBatis增强工具，提供强大的CRUD功能</td></tr><tr><td>MyBatis-Flex Codegen</td><td>1.11.1</td><td>代码生成器支持</td></tr></tbody></table><h3 id="消息队列" tabindex="-1">消息队列 <a class="header-anchor" href="#消息队列" aria-label="Permalink to &quot;消息队列&quot;">​</a></h3><table tabindex="0"><thead><tr><th>技术</th><th>版本</th><th>说明</th></tr></thead><tbody><tr><td>Spring Boot AMQP</td><td>2.7.6</td><td>Spring AMQP集成</td></tr><tr><td>RabbitMQ Client</td><td>5.16.0 (传递依赖)</td><td>RabbitMQ Java客户端</td></tr></tbody></table><p><strong>功能特性</strong>:</p><ul><li>支持异步新增更新删除操作</li><li>死信队列机制</li><li>自动重试机制（最多3次）</li><li>三队列隔离架构</li></ul><h3 id="json处理" tabindex="-1">JSON处理 <a class="header-anchor" href="#json处理" aria-label="Permalink to &quot;JSON处理&quot;">​</a></h3><table tabindex="0"><thead><tr><th>技术</th><th>版本</th><th>说明</th></tr></thead><tbody><tr><td>Jackson Databind</td><td>2.13.4.2</td><td>JSON序列化/反序列化</td></tr><tr><td>Jackson Datatype JSR310</td><td>2.13.4</td><td>Java 8时间类型支持</td></tr></tbody></table><p><strong>配置特性</strong>:</p><ul><li>自定义Date序列化格式（yyyy-MM-dd HH:mm:ss）</li><li>JavaTimeModule支持LocalDateTime</li><li>忽略未知属性配置</li><li>接受空字符串为null</li></ul><h3 id="工具库" tabindex="-1">工具库 <a class="header-anchor" href="#工具库" aria-label="Permalink to &quot;工具库&quot;">​</a></h3><table tabindex="0"><thead><tr><th>技术</th><th>版本</th><th>说明</th></tr></thead><tbody><tr><td>Lombok</td><td>1.18.24</td><td>简化Java代码，减少样板代码</td></tr><tr><td>Swagger</td><td>3.0.0</td><td>API文档生成</td></tr><tr><td>Sa-Token</td><td>1.44.0</td><td>轻量级权限认证框架</td></tr></tbody></table><h2 id="_3-模块结构" tabindex="-1">3. 模块结构 <a class="header-anchor" href="#_3-模块结构" aria-label="Permalink to &quot;3. 模块结构&quot;">​</a></h2><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>common/</span></span>
<span class="line"><span>src/main/java/com/btc/common/</span></span>
<span class="line"><span>annotation/ # 自定义注解</span></span>
<span class="line"><span>ApiOperation.java</span></span>
<span class="line"><span>config/ # 配置类</span></span>
<span class="line"><span>CommonAutoConfiguration.java # 自动配置类</span></span>
<span class="line"><span>MyBatisFlexConfiguration.java # MyBatis-Flex配置</span></span>
<span class="line"><span>RabbitMQConfig.java # RabbitMQ配置</span></span>
<span class="line"><span>controller/ # 基础控制器</span></span>
<span class="line"><span>BaseController.java # 提供通用CRUD接口</span></span>
<span class="line"><span>dto/ # 数据传输对象</span></span>
<span class="line"><span>AsyncInsertMessage.java # 异步操作消息</span></span>
<span class="line"><span>PageQuery.java # 分页查询参数</span></span>
<span class="line"><span>PageResult.java # 分页结果</span></span>
<span class="line"><span>entity/ # 基础实体</span></span>
<span class="line"><span>BaseEntity.java</span></span>
<span class="line"><span>enumeration/ # 枚举类</span></span>
<span class="line"><span>SmsCodeEnum.java</span></span>
<span class="line"><span>exception/ # 异常处理</span></span>
<span class="line"><span>BaseResponseCode.java</span></span>
<span class="line"><span>ResponseCodeInterface.java</span></span>
<span class="line"><span>mapper/ # 基础Mapper</span></span>
<span class="line"><span>BaseMapper.java</span></span>
<span class="line"><span>pojo/ # POJO对象</span></span>
<span class="line"><span>EmailObject.java</span></span>
<span class="line"><span>routes/ # 路由常量</span></span>
<span class="line"><span>Routes.java</span></span>
<span class="line"><span>service/ # 服务接口</span></span>
<span class="line"><span>AsyncInsertService.java # 异步操作服务接口</span></span>
<span class="line"><span>BaseService.java # 基础服务接口</span></span>
<span class="line"><span>impl/</span></span>
<span class="line"><span>AsyncInsertMessageConsumer.java # 消息消费者</span></span>
<span class="line"><span>AsyncInsertServiceImpl.java # 异步操作实现</span></span>
<span class="line"><span>BaseServiceImpl.java # 基础服务实现</span></span>
<span class="line"><span>util/ # 工具类</span></span>
<span class="line"><span>DataResult.java # 统一返回结果</span></span>
<span class="line"><span>JsonResult.java # JSON返回结果</span></span>
<span class="line"><span>src/main/resources/</span></span>
<span class="line"><span>META-INF/</span></span>
<span class="line"><span>spring.factories # Spring自动配置</span></span>
<span class="line"><span>application.properties # 配置文件</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div><h2 id="_4-核心功能" tabindex="-1">4. 核心功能 <a class="header-anchor" href="#_4-核心功能" aria-label="Permalink to &quot;4. 核心功能&quot;">​</a></h2><h3 id="_1-通用crud基类" tabindex="-1">1. 通用CRUD基类 <a class="header-anchor" href="#_1-通用crud基类" aria-label="Permalink to &quot;1. 通用CRUD基类&quot;">​</a></h3><h4 id="baseservice接口" tabindex="-1">BaseService接口 <a class="header-anchor" href="#baseservice接口" aria-label="Permalink to &quot;BaseService接口&quot;">​</a></h4><p>提供标准的数据操作接口：</p><ul><li><strong>异步新增</strong>: asyncSave(), asyncSaveBatch()</li><li><strong>异步更新</strong>: asyncUpdateById(), asyncUpdateBatchById()</li><li><strong>异步删除</strong>: asyncRemoveById(), asyncRemoveByIds()</li><li><strong>查询操作</strong>: getById(), list(), page()</li></ul><h4 id="basecontroller类" tabindex="-1">BaseController类 <a class="header-anchor" href="#basecontroller类" aria-label="Permalink to &quot;BaseController类&quot;">​</a></h4><p>提供标准的REST API接口：</p><ul><li><strong>POST</strong> <code>/async/add</code> - 异步新增</li><li><strong>PUT</strong> <code>/async/update</code> - 异步更新</li><li><strong>DELETE</strong> <code>/async/{id}</code> - 异步删除</li><li><strong>GET</strong> <code>/{id}</code> - 查询单个</li><li><strong>GET</strong> <code>/list</code> - 查询列表</li><li><strong>GET</strong> <code>/page</code> - 分页查询</li></ul><h3 id="_2-rabbitmq异步操作" tabindex="-1">2. RabbitMQ异步操作 <a class="header-anchor" href="#_2-rabbitmq异步操作" aria-label="Permalink to &quot;2. RabbitMQ异步操作&quot;">​</a></h3><h4 id="队列架构-三队列隔离" tabindex="-1">队列架构（三队列隔离） <a class="header-anchor" href="#队列架构-三队列隔离" aria-label="Permalink to &quot;队列架构（三队列隔离）&quot;">​</a></h4><ul><li><strong>INSERT队列</strong>: async.insert.queue（新增操作）</li><li><strong>UPDATE队列</strong>: async.update.queue（更新操作）</li><li><strong>DELETE队列</strong>: async.delete.queue（删除操作）</li></ul><h4 id="特性" tabindex="-1">特性 <a class="header-anchor" href="#特性" aria-label="Permalink to &quot;特性&quot;">​</a></h4><ul><li>操作立即返回消息ID</li><li>后台异步处理</li><li>失败自动重试（最多3次）</li><li>死信队列处理最终失败的消息</li><li>完整的日志和监控</li></ul><h3 id="_3-date字段序列化优化" tabindex="-1">3. Date字段序列化优化 <a class="header-anchor" href="#_3-date字段序列化优化" aria-label="Permalink to &quot;3. Date字段序列化优化&quot;">​</a></h3><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6A737D", "--shiki-dark": "#6A737D" })}">// Date字段使用字符串格式序列化</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">格式</span><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">:</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> yyyy</span><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">-</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">MM</span><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">-</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">dd HH</span><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">:</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">mm</span><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">:</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">ss</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">示例</span><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">:</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> &quot;2025-10-13 13:50:27&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>避免了时间戳格式导致的ClassCastException问题</p><h2 id="_5-配置说明" tabindex="-1">5. 配置说明 <a class="header-anchor" href="#_5-配置说明" aria-label="Permalink to &quot;5. 配置说明&quot;">​</a></h2><h3 id="rabbitmq配置" tabindex="-1">RabbitMQ配置 <a class="header-anchor" href="#rabbitmq配置" aria-label="Permalink to &quot;RabbitMQ配置&quot;">​</a></h3><div class="language-properties vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">properties</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">spring.rabbitmq.enabled</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">=true</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">spring.rabbitmq.host</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">=106.52.209.154</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">spring.rabbitmq.port</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">=5672</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">spring.rabbitmq.username</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">=root</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">spring.rabbitmq.password</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">=123456</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">spring.rabbitmq.virtual-host</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">=/root</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">spring.rabbitmq.publisher-confirm-type</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">=correlated</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">spring.rabbitmq.publisher-returns</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">=true</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="启用-禁用rabbitmq" tabindex="-1">启用/禁用RabbitMQ <a class="header-anchor" href="#启用-禁用rabbitmq" aria-label="Permalink to &quot;启用/禁用RabbitMQ&quot;">​</a></h3><ul><li>启用: <code>spring.rabbitmq.enabled=true</code></li><li>禁用: <code>spring.rabbitmq.enabled=false</code></li></ul><h2 id="_6-使用方式" tabindex="-1">6. 使用方式 <a class="header-anchor" href="#_6-使用方式" aria-label="Permalink to &quot;6. 使用方式&quot;">​</a></h2><h3 id="_1-在service中继承baseserviceimpl" tabindex="-1">1. 在Service中继承BaseServiceImpl <a class="header-anchor" href="#_1-在service中继承baseserviceimpl" aria-label="Permalink to &quot;1. 在Service中继承BaseServiceImpl&quot;">​</a></h3><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">@</span><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">Service</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">public</span><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}"> class</span><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}"> DepartmentService</span><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}"> extends</span><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}"> BaseServiceImpl</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">&lt;</span><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">DepartmentMapper</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">, </span><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">Department</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">&gt;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">implements</span><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}"> IDepartmentService</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> {</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">@</span><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">Resource</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">private</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> DepartmentMapper departmentMapper;</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">@</span><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">Override</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">protected</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> DepartmentMapper </span><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">baseMapper</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">() {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">return</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> departmentMapper;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">}</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="_2-在controller中继承basecontroller" tabindex="-1">2. 在Controller中继承BaseController <a class="header-anchor" href="#_2-在controller中继承basecontroller" aria-label="Permalink to &quot;2. 在Controller中继承BaseController&quot;">​</a></h3><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">@</span><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">RestController</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">@</span><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">RequestMapping</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">(</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}">&quot;/department&quot;</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">public</span><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}"> class</span><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}"> DepartmentController</span><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}"> extends</span><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}"> BaseController</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">&lt;</span><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">DepartmentService</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">, </span><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">Department</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">&gt; {</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">@</span><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">Resource</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">private</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> DepartmentService departmentService;</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">@</span><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">Override</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">protected</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> DepartmentService </span><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">baseService</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">() {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">return</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> departmentService;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">}</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="_3-使用异步操作" tabindex="-1">3. 使用异步操作 <a class="header-anchor" href="#_3-使用异步操作" aria-label="Permalink to &quot;3. 使用异步操作&quot;">​</a></h3><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6A737D", "--shiki-dark": "#6A737D" })}">// 异步新增</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">String messageId </span><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">=</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> departmentService.</span><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">asyncSave</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">(department);</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6A737D", "--shiki-dark": "#6A737D" })}">// 异步更新</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">String messageId </span><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">=</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> departmentService.</span><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">asyncUpdateById</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">(department);</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6A737D", "--shiki-dark": "#6A737D" })}">// 异步删除</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">String messageId </span><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">=</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> departmentService.</span><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">asyncRemoveById</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">(id);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="_7-依赖关系" tabindex="-1">7. 依赖关系 <a class="header-anchor" href="#_7-依赖关系" aria-label="Permalink to &quot;7. 依赖关系&quot;">​</a></h2><h3 id="被依赖服务" tabindex="-1">被依赖服务 <a class="header-anchor" href="#被依赖服务" aria-label="Permalink to &quot;被依赖服务&quot;">​</a></h3><ul><li>system-service</li><li>gateway-service</li><li>admin-service</li><li>supplier-service</li><li>upload-service</li><li>search-service</li><li>notice-service</li><li>dispatch-service</li></ul><h3 id="依赖外部组件" tabindex="-1">依赖外部组件 <a class="header-anchor" href="#依赖外部组件" aria-label="Permalink to &quot;依赖外部组件&quot;">​</a></h3><ul><li>RabbitMQ（106.52.209.154:5672）</li><li>MySQL（通过业务服务配置）</li></ul><h2 id="_8-注意事项" tabindex="-1">8. 注意事项 <a class="header-anchor" href="#_8-注意事项" aria-label="Permalink to &quot;8. 注意事项&quot;">​</a></h2><ol><li><strong>RabbitMQ必须配置</strong>: 如使用异步功能，需确保RabbitMQ服务运行</li><li><strong>Date字段格式</strong>: 统一使用字符串格式避免ClassCastException</li><li><strong>自动配置</strong>: 通过spring.factories自动装配，无需手动扫描</li><li><strong>泛型类型</strong>: BaseService和BaseController使用泛型，需正确指定类型参数</li></ol><h2 id="_9-相关文档" tabindex="-1">9. 相关文档 <a class="header-anchor" href="#_9-相关文档" aria-label="Permalink to &quot;9. 相关文档&quot;">​</a></h2><ul><li>MyBatis-Flex官方文档: <a href="https://mybatis-flex.com" target="_blank" rel="noreferrer">https://mybatis-flex.com</a></li><li>RabbitMQ官方文档: <a href="https://www.rabbitmq.com" target="_blank" rel="noreferrer">https://www.rabbitmq.com</a></li><li>Spring AMQP文档: <a href="https://spring.io/projects/spring-amqp" target="_blank" rel="noreferrer">https://spring.io/projects/spring-amqp</a></li></ul></div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("guides/backend/common.md");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const common = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender]]);
export {
  __pageData,
  common as default
};
