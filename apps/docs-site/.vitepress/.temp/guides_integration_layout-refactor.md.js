import { ssrRenderAttrs, ssrRenderStyle } from "vue/server-renderer";
import { useSSRContext } from "vue";
import { _ as _export_sfc } from "./plugin-vue_export-helper.1tPrXgE0.js";
const __pageData = JSON.parse('{"title":"布局重构","description":"","frontmatter":{"title":"布局重构","type":"guide","project":"btc-shopflow","owner":"dev-team","created":"2025-10-13","updated":"2025-10-13","publish":true,"tags":["integration","guides"],"sidebar_label":"布局重构","sidebar_order":7,"sidebar_group":"integration"},"headers":[],"relativePath":"guides/integration/layout-refactor.md","filePath":"guides/integration/layout-refactor.md","lastUpdated":1760420026000}');
const _sfc_main = { name: "guides/integration/layout-refactor.md" };
function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${ssrRenderAttrs(_attrs)}><h1 id="布局重构-vitepress-集成完成报告" tabindex="-1">布局重构 + VitePress 集成完成报告 <a class="header-anchor" href="#布局重构-vitepress-集成完成报告" aria-label="Permalink to &quot;布局重构 + VitePress 集成完成报告&quot;">​</a></h1><h2 id="完成时间" tabindex="-1">完成时间 <a class="header-anchor" href="#完成时间" aria-label="Permalink to &quot;完成时间&quot;">​</a></h2><p>2025-10-13</p><h2 id="重构内容" tabindex="-1">重构内容 <a class="header-anchor" href="#重构内容" aria-label="Permalink to &quot;重构内容&quot;">​</a></h2><h3 id="_1-主应用布局优化" tabindex="-1">1. 主应用布局优化 <a class="header-anchor" href="#_1-主应用布局优化" aria-label="Permalink to &quot;1. 主应用布局优化&quot;">​</a></h3><ul><li>统一了布局组件结构</li><li>优化了响应式设计</li><li>改善了用户体验</li></ul><h3 id="_2-vitepress-集成" tabindex="-1">2. VitePress 集成 <a class="header-anchor" href="#_2-vitepress-集成" aria-label="Permalink to &quot;2. VitePress 集成&quot;">​</a></h3><ul><li>实现了文档站点的无缝集成</li><li>统一了主题和样式</li><li>保持了导航的一致性</li></ul><h3 id="_3-性能优化" tabindex="-1">3. 性能优化 <a class="header-anchor" href="#_3-性能优化" aria-label="Permalink to &quot;3. 性能优化&quot;">​</a></h3><ul><li>减少了重复渲染</li><li>优化了资源加载</li><li>提升了响应速度</li></ul><h2 id="技术实现" tabindex="-1">技术实现 <a class="header-anchor" href="#技术实现" aria-label="Permalink to &quot;技术实现&quot;">​</a></h2><h3 id="布局组件重构" tabindex="-1">布局组件重构 <a class="header-anchor" href="#布局组件重构" aria-label="Permalink to &quot;布局组件重构&quot;">​</a></h3><div class="language-vue vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">&lt;</span><span style="${ssrRenderStyle({ "--shiki-light": "#22863A", "--shiki-dark": "#85E89D" })}">template</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">&gt;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">  &lt;</span><span style="${ssrRenderStyle({ "--shiki-light": "#22863A", "--shiki-dark": "#85E89D" })}">div</span><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}"> class</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">=</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}">&quot;app-layout&quot;</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">&gt;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">    &lt;</span><span style="${ssrRenderStyle({ "--shiki-light": "#22863A", "--shiki-dark": "#85E89D" })}">AppHeader</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> /&gt;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">    &lt;</span><span style="${ssrRenderStyle({ "--shiki-light": "#22863A", "--shiki-dark": "#85E89D" })}">AppSidebar</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> /&gt;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">    &lt;</span><span style="${ssrRenderStyle({ "--shiki-light": "#22863A", "--shiki-dark": "#85E89D" })}">AppContent</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> /&gt;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">  &lt;/</span><span style="${ssrRenderStyle({ "--shiki-light": "#22863A", "--shiki-dark": "#85E89D" })}">div</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">&gt;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">&lt;/</span><span style="${ssrRenderStyle({ "--shiki-light": "#22863A", "--shiki-dark": "#85E89D" })}">template</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="vitepress-集成" tabindex="-1">VitePress 集成 <a class="header-anchor" href="#vitepress-集成" aria-label="Permalink to &quot;VitePress 集成&quot;">​</a></h3><ul><li>iframe 嵌入方式</li><li>主题同步机制</li><li>路由同步处理</li></ul><h2 id="测试验证" tabindex="-1">测试验证 <a class="header-anchor" href="#测试验证" aria-label="Permalink to &quot;测试验证&quot;">​</a></h2><h3 id="功能测试" tabindex="-1">功能测试 <a class="header-anchor" href="#功能测试" aria-label="Permalink to &quot;功能测试&quot;">​</a></h3><ul><li>✅ 布局正常显示</li><li>✅ 响应式设计正常</li><li>✅ 文档集成正常</li></ul><h3 id="性能测试" tabindex="-1">性能测试 <a class="header-anchor" href="#性能测试" aria-label="Permalink to &quot;性能测试&quot;">​</a></h3><ul><li>✅ 加载速度提升</li><li>✅ 内存使用优化</li><li>✅ 渲染性能改善</li></ul><h2 id="重构成果" tabindex="-1">重构成果 <a class="header-anchor" href="#重构成果" aria-label="Permalink to &quot;重构成果&quot;">​</a></h2><h3 id="用户体验提升" tabindex="-1">用户体验提升 <a class="header-anchor" href="#用户体验提升" aria-label="Permalink to &quot;用户体验提升&quot;">​</a></h3><ul><li>统一的界面风格</li><li>流畅的交互体验</li><li>更好的可用性</li></ul><h3 id="开发效率提升" tabindex="-1">开发效率提升 <a class="header-anchor" href="#开发效率提升" aria-label="Permalink to &quot;开发效率提升&quot;">​</a></h3><ul><li>组件复用性增强</li><li>维护成本降低</li><li>扩展性改善</li></ul><h3 id="技术债务清理" tabindex="-1">技术债务清理 <a class="header-anchor" href="#技术债务清理" aria-label="Permalink to &quot;技术债务清理&quot;">​</a></h3><ul><li>代码结构优化</li><li>样式统一规范</li><li>性能问题解决</li></ul><hr><p><strong>重构状态</strong>: 完成 <strong>测试状态</strong>: 通过 <strong>性能状态</strong>: 优化完成</p></div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("guides/integration/layout-refactor.md");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const layoutRefactor = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender]]);
export {
  __pageData,
  layoutRefactor as default
};
