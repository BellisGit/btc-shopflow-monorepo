import { ssrRenderAttrs } from "vue/server-renderer";
import { useSSRContext } from "vue";
import { _ as _export_sfc } from "./plugin-vue_export-helper.1tPrXgE0.js";
const __pageData = JSON.parse('{"title":"BtcUpsert 与 BtcForm 职责澄清 - 对标 cool-admin","description":"","frontmatter":{"title":"BtcUpsert 与 BtcForm 职责澄清 - 对标 cool-admin","type":"adr","project":"project","owner":"dev-team","created":"2025-10-12","updated":"2025-10-13","publish":true,"tags":["adr","project","components","clarification"],"sidebar_label":"BtcUpsert 职责","sidebar_order":2,"sidebar_group":"adr-project"},"headers":[],"relativePath":"adr/project/btc-upsert-form.md","filePath":"adr/project/btc-upsert-form.md","lastUpdated":1760420026000}');
const _sfc_main = { name: "adr/project/btc-upsert-form.md" };
function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${ssrRenderAttrs(_attrs)}><h1 id="adr-btcupsert-与-btcform-职责澄清" tabindex="-1">ADR: BtcUpsert 与 BtcForm 职责澄清 <a class="header-anchor" href="#adr-btcupsert-与-btcform-职责澄清" aria-label="Permalink to &quot;ADR: BtcUpsert 与 BtcForm 职责澄清&quot;">​</a></h1><blockquote><p><strong>状态</strong>: 已采纳<br><strong>日期</strong>: 2025-10-12<br><strong>决策者</strong>: 开发团队<br><strong>影响范围</strong>: 组件库设计和CRUD系统</p></blockquote><hr><h2 id="context" tabindex="-1">Context <a class="header-anchor" href="#context" aria-label="Permalink to &quot;Context&quot;">​</a></h2><p>在初期实现中，我们错误地认为 BtcForm 应该替代 BtcUpsert，导致将所有 CRUD 页面迁移到了 BtcForm但通过深入研究 cool-admin 的设计后发现：</p><ol><li><strong>cool-admin 的主要使用方式是 <code>cl-upsert</code></strong>（声明式，在 CRUD 上下文中）</li><li><strong><code>cl-form</code> 是独立组件</strong>（命令式，用于非 CRUD 场景）</li><li><strong>两者用途完全不同</strong>，不是替代关系</li></ol><p>这导致了架构理解偏差，需要纠正</p><h2 id="options" tabindex="-1">Options <a class="header-anchor" href="#options" aria-label="Permalink to &quot;Options&quot;">​</a></h2><h3 id="option-a-删除-btcform-只保留-btcupsert" tabindex="-1">Option A: 删除 BtcForm，只保留 BtcUpsert <a class="header-anchor" href="#option-a-删除-btcform-只保留-btcupsert" aria-label="Permalink to &quot;Option A: 删除 BtcForm，只保留 BtcUpsert&quot;">​</a></h3><p><strong>优点</strong>：</p><ul><li>简化组件体系</li><li>减少维护负担</li><li>避免选择困惑</li></ul><p><strong>缺点</strong>：</p><ul><li>失去处理独立表单的能力</li><li>BtcUpsert 必须在 BtcCrud 内使用，限制灵活性</li><li>与 cool-admin 的设计不一致</li></ul><h3 id="option-b-保留两者-澄清用途" tabindex="-1">Option B: 保留两者，澄清用途 <a class="header-anchor" href="#option-b-保留两者-澄清用途" aria-label="Permalink to &quot;Option B: 保留两者，澄清用途&quot;">​</a></h3><p><strong>优点</strong>：</p><ul><li>符合 cool-admin 的设计理念</li><li>各司其职：BtcUpsert for CRUD, BtcForm for 独立表单</li><li>已经实现的 BtcForm 可用于未来的独立表单场景</li><li>提供完整的解决方案</li></ul><p><strong>缺点</strong>：</p><ul><li>需要维护两个组件</li><li>需要明确文档说明用途</li><li>开发者需要理解何时用哪个</li></ul><h3 id="option-c-btcupsert-继承-btcform" tabindex="-1">Option C: BtcUpsert 继承 BtcForm <a class="header-anchor" href="#option-c-btcupsert-继承-btcform" aria-label="Permalink to &quot;Option C: BtcUpsert 继承 BtcForm&quot;">​</a></h3><p><strong>优点</strong>：</p><ul><li>代码复用</li><li>统一底层实现</li></ul><p><strong>缺点</strong>：</p><ul><li>增加复杂度</li><li>两者的 API 设计有本质差异（声明式 vs 命令式）</li><li>过度工程化</li></ul><h2 id="decision" tabindex="-1">Decision <a class="header-anchor" href="#decision" aria-label="Permalink to &quot;Decision&quot;">​</a></h2><p><strong>选择 Option B</strong>：保留两者，明确澄清用途</p><p>核心理由：</p><ol><li><strong>对标最佳实践</strong>：cool-admin 也是这样设计的（cl-upsert + cl-form）</li><li><strong>职责清晰</strong>：</li></ol><ul><li>BtcUpsert：CRUD 专用（99% 的场景）</li><li>BtcForm：通用表单（1% 的场景）</li></ul><ol start="3"><li><strong>未来扩展性</strong>：保留处理复杂独立表单的能力</li><li><strong>符合单一职责原则</strong>：每个组件做好一件事</li></ol><h3 id="实施策略" tabindex="-1">实施策略 <a class="header-anchor" href="#实施策略" aria-label="Permalink to &quot;实施策略&quot;">​</a></h3><ol><li><strong>恢复所有 CRUD 页面使用 BtcUpsert</strong>（10个权限管理页面）</li><li><strong>增强 BtcUpsert</strong>：</li></ol><ul><li>添加 mode 属性（add/update/info）</li><li>添加完整生命周期钩子</li><li>支持动态表单项</li><li>集成 form-hook</li></ul><ol start="3"><li><strong>保留 BtcForm</strong>用于未来的独立表单场景</li><li><strong>创建详细文档</strong>：明确两者的用途区别</li></ol><h2 id="consequences" tabindex="-1">Consequences <a class="header-anchor" href="#consequences" aria-label="Permalink to &quot;Consequences&quot;">​</a></h2><h3 id="正向" tabindex="-1">正向 <a class="header-anchor" href="#正向" aria-label="Permalink to &quot;正向&quot;">​</a></h3><ul><li>架构清晰：CRUD 用 BtcUpsert，独立表单用 BtcForm</li><li>对标 cool-admin：降低学习曲线</li><li>职责分离：每个组件专注于自己的场景</li><li>代码简洁：CRUD 页面使用声明式配置更简单</li><li>未来可扩展：保留处理复杂表单的能力</li></ul><h3 id="负向" tabindex="-1">负向 <a class="header-anchor" href="#负向" aria-label="Permalink to &quot;负向&quot;">​</a></h3><ul><li>双组件维护：需要维护两个表单组件</li><li>学习成本：开发者需要理解何时用哪个</li><li>文档负担：需要清晰说明两者区别</li></ul><h3 id="风险缓解" tabindex="-1">风险缓解 <a class="header-anchor" href="#风险缓解" aria-label="Permalink to &quot;风险缓解&quot;">​</a></h3><ol><li><strong>详细文档</strong>：创建 <code>BTC-UPSERT-VS-FORM-GUIDE.md</code> 明确说明</li><li><strong>清晰示例</strong>：10个权限管理页面作为 BtcUpsert 示例</li><li><strong>优先级指引</strong>：文档中明确&quot;99% 情况用 BtcUpsert&quot;</li><li><strong>命名明确</strong>：Upsert 暗示 CRUD，Form 暗示通用</li></ol><h2 id="实施结果" tabindex="-1">实施结果 <a class="header-anchor" href="#实施结果" aria-label="Permalink to &quot;实施结果&quot;">​</a></h2><h3 id="已完成-2025-10-12" tabindex="-1">已完成（2025-10-12） <a class="header-anchor" href="#已完成-2025-10-12" aria-label="Permalink to &quot;已完成（2025-10-12）&quot;">​</a></h3><ol><li>恢复 10 个权限管理页面使用 BtcUpsert</li><li>增强 BtcUpsert：</li></ol><ul><li>mode 属性（add/update/info）</li><li>6个生命周期钩子（onOpen, onInfo, onOpened, onSubmit, onClose, onClosed）</li><li>动态表单项支持（函数返回）</li><li>form-hook 集成（简化版）</li></ul><ol start="3"><li>完善 BtcForm：</li></ol><ul><li>组件映射表（支持所有 Element Plus 组件）</li><li>完整渲染函数实现</li></ul><ol start="4"><li>创建完整文档：</li></ol><ul><li><code>BTC-UPSERT-VS-FORM-GUIDE.md</code> - 对比指南</li><li><code>packages/shared-components/src/crud/upsert/README.md</code> - BtcUpsert 文档</li><li><code>packages/shared-components/src/common/form/README.md</code> - BtcForm 文档</li></ul><h3 id="组件对比" tabindex="-1">组件对比 <a class="header-anchor" href="#组件对比" aria-label="Permalink to &quot;组件对比&quot;">​</a></h3><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>BtcUpsert (CRUD 专用) cl-upsert</span></span>
<span class="line"><span>- 声明式</span></span>
<span class="line"><span>- 在 &lt;BtcCrud&gt; 内使用</span></span>
<span class="line"><span>- 99% 的场景</span></span>
<span class="line"><span></span></span>
<span class="line"><span>BtcForm (通用表单) cl-form</span></span>
<span class="line"><span>- 命令式</span></span>
<span class="line"><span>- 独立使用</span></span>
<span class="line"><span>- 1% 的场景</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="后续行动" tabindex="-1">后续行动 <a class="header-anchor" href="#后续行动" aria-label="Permalink to &quot;后续行动&quot;">​</a></h2><ul><li>[ ] 添加 BtcTable 的 &#39;info&#39; 按钮支持（详情模式）</li><li>[ ] 为 BtcUpsert 添加插件系统（参考 cl-upsert）</li><li>[ ] 为 BtcUpsert 添加分组/Tabs 支持</li><li>[ ] 完善 form-hook 系统（完整转换器）</li><li>[ ] 创建视频教程说明两者区别</li></ul><h2 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-label="Permalink to &quot;参考&quot;">​</a></h2><ul><li><code>docs/BTC-UPSERT-VS-FORM-GUIDE.md</code> - 使用指南</li><li><code>cool-admin-vue-8.x/packages/crud/src/components/upsert/</code> - 参考实现</li><li><code>cool-admin-vue-8.x/packages/crud/src/components/form/</code> - 参考实现</li><li><code>apps/main-app/src/pages/system/</code> - 实际使用示例（10个页面）</li></ul></div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("adr/project/btc-upsert-form.md");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const btcUpsertForm = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender]]);
export {
  __pageData,
  btcUpsertForm as default
};
