import { ssrRenderAttrs, ssrRenderStyle } from "vue/server-renderer";
import { useSSRContext } from "vue";
import { _ as _export_sfc } from "./plugin-vue_export-helper.1tPrXgE0.js";
const __pageData = JSON.parse('{"title":"BTC 文档中心","description":"","frontmatter":{},"headers":[],"relativePath":"README.md","filePath":"README.md","lastUpdated":1760420026000}');
const _sfc_main = { name: "README.md" };
function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${ssrRenderAttrs(_attrs)}><h1 id="btc-文档中心" tabindex="-1">BTC 文档中心 <a class="header-anchor" href="#btc-文档中心" aria-label="Permalink to &quot;BTC 文档中心&quot;">​</a></h1><p>内部开发者档案库 - Engineering Knowledge Archive</p><p><strong>所有技术文档组件文档架构决策操作手册的统一管理平台</strong></p><h2 id="启动" tabindex="-1">启动 <a class="header-anchor" href="#启动" aria-label="Permalink to &quot;启动&quot;">​</a></h2><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#005CC5", "--shiki-dark": "#79B8FF" })}">cd</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> apps/docs-site</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">pnpm</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> dev</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>访问：<a href="http://localhost:8085" target="_blank" rel="noreferrer">http://localhost:8085</a></p><p>或在主应用中点击&quot;文档中心&quot;菜单（iframe 嵌入）</p><h2 id="构建" tabindex="-1">构建 <a class="header-anchor" href="#构建" aria-label="Permalink to &quot;构建&quot;">​</a></h2><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">pnpm</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> build</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>构建产物：<code>.vitepress/dist/</code></p><h2 id="文档结构" tabindex="-1">文档结构 <a class="header-anchor" href="#文档结构" aria-label="Permalink to &quot;文档结构&quot;">​</a></h2><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>apps/docs-site/</span></span>
<span class="line"><span>guides/ # 开发指南</span></span>
<span class="line"><span>integration/ # 集成指南（VitePress搜索布局等）</span></span>
<span class="line"><span>components/ # 组件指南</span></span>
<span class="line"><span>forms/ # 表单指南</span></span>
<span class="line"><span>system/ # 系统指南</span></span>
<span class="line"><span>layout/ # Layout 组件文档</span></span>
<span class="line"><span>adr/ # 架构决策记录（ADR）</span></span>
<span class="line"><span>rfc/ # 方案设计</span></span>
<span class="line"><span>sop/ # 操作手册（SOP）</span></span>
<span class="line"><span>packages/ # 包文档（API 参考）</span></span>
<span class="line"><span>components/ # 组件使用文档</span></span>
<span class="line"><span>templates/ # 文档模板</span></span>
<span class="line"><span>timeline/ # 时间线（自动生成）</span></span>
<span class="line"><span>projects/ # 项目索引（自动生成）</span></span>
<span class="line"><span>types/ # 类型索引（自动生成）</span></span>
<span class="line"><span>tags/ # 标签云（自动生成）</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h2 id="特性" tabindex="-1">特性 <a class="header-anchor" href="#特性" aria-label="Permalink to &quot;特性&quot;">​</a></h2><ul><li><strong>主题统一</strong> - 复用主应用的主题和 CSS 变量</li><li><strong>i18n 统一</strong> - 使用主应用的 @btc/shared-core i18n</li><li><strong>全局搜索</strong> - 集成到主应用的全局搜索（Ctrl+K）</li><li><strong>暗黑模式</strong> - 与主应用双向同步</li><li><strong>响应式</strong> - 完美适配桌面和移动端</li><li><strong>Markdown 增强</strong> - 代码高亮容器frontmatter</li><li><strong>组件演示</strong> - 支持组件在线演示</li></ul><h2 id="创建新文档" tabindex="-1">创建新文档 <a class="header-anchor" href="#创建新文档" aria-label="Permalink to &quot;创建新文档&quot;">​</a></h2><h3 id="使用命令创建" tabindex="-1">使用命令创建 <a class="header-anchor" href="#使用命令创建" aria-label="Permalink to &quot;使用命令创建&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">pnpm</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> new-doc</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="手动创建" tabindex="-1">手动创建 <a class="header-anchor" href="#手动创建" aria-label="Permalink to &quot;手动创建&quot;">​</a></h3><ol><li>在相应目录下创建 .md 文件</li><li>添加 frontmatter：</li></ol><div class="language-yaml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">---</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#22863A", "--shiki-dark": "#85E89D" })}">title</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">: </span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}">文档标题</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#22863A", "--shiki-dark": "#85E89D" })}">type</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">: </span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}">guide|decision|rfc|howto|api|summary</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#22863A", "--shiki-dark": "#85E89D" })}">project</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">: </span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}">btc-shopflow</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#22863A", "--shiki-dark": "#85E89D" })}">owner</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">: </span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}">dev-team</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#22863A", "--shiki-dark": "#85E89D" })}">created</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">: </span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}">YYYY-MM-DD</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#22863A", "--shiki-dark": "#85E89D" })}">updated</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">: </span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}">YYYY-MM-DD</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#22863A", "--shiki-dark": "#85E89D" })}">publish</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">: </span><span style="${ssrRenderStyle({ "--shiki-light": "#005CC5", "--shiki-dark": "#79B8FF" })}">true</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#22863A", "--shiki-dark": "#85E89D" })}">tags</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">: [</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}">tag1</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">, </span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}">tag2</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">]</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">---</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><ol start="3"><li>编写内容</li><li>在 <code>.vitepress/config.ts</code> 中添加 sidebar 链接（可选）</li></ol><h2 id="文档类型" tabindex="-1">文档类型 <a class="header-anchor" href="#文档类型" aria-label="Permalink to &quot;文档类型&quot;">​</a></h2><table tabindex="0"><thead><tr><th>类型</th><th>说明</th><th>目录</th></tr></thead><tbody><tr><td><strong>guide</strong></td><td>开发指南教程</td><td><code>guides/</code></td></tr><tr><td><strong>decision</strong></td><td>架构决策记录（ADR）</td><td><code>adr/</code></td></tr><tr><td><strong>rfc</strong></td><td>方案设计</td><td><code>rfc/</code></td></tr><tr><td><strong>howto</strong></td><td>操作手册（SOP）</td><td><code>sop/</code></td></tr><tr><td><strong>api</strong></td><td>API 参考文档</td><td><code>packages/</code></td></tr><tr><td><strong>summary</strong></td><td>总结报告</td><td><code>guides/integration/</code></td></tr></tbody></table><h2 id="可用脚本" tabindex="-1">可用脚本 <a class="header-anchor" href="#可用脚本" aria-label="Permalink to &quot;可用脚本&quot;">​</a></h2><table tabindex="0"><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td><code>pnpm dev</code></td><td>启动开发服务器</td></tr><tr><td><code>pnpm build</code></td><td>构建静态站点</td></tr><tr><td><code>pnpm preview</code></td><td>预览构建产物</td></tr><tr><td><code>pnpm migrate</code></td><td>迁移文档（已执行）</td></tr><tr><td><code>pnpm new-doc</code></td><td>创建新文档（交互式）</td></tr><tr><td><code>pnpm validate-frontmatter</code></td><td>验证 frontmatter</td></tr></tbody></table><h2 id="重要规则" tabindex="-1">重要规则 <a class="header-anchor" href="#重要规则" aria-label="Permalink to &quot;重要规则&quot;">​</a></h2><ol><li><strong>禁止在文档中心之外创建 .md 文档</strong></li><li><strong>所有技术文档必须在此目录下</strong></li><li><strong>使用 frontmatter 管理元数据</strong></li><li><strong>遵循文档类型规范</strong></li></ol><h2 id="相关链接" tabindex="-1">相关链接 <a class="header-anchor" href="#相关链接" aria-label="Permalink to &quot;相关链接&quot;">​</a></h2><ul><li><a href="./../main-app/README">主应用</a></li><li><a href="./../../README">项目根目录</a></li></ul></div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("README.md");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const README = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender]]);
export {
  __pageData,
  README as default
};
