import { ssrRenderAttrs, ssrRenderStyle } from "vue/server-renderer";
import { useSSRContext } from "vue";
import { _ as _export_sfc } from "./plugin-vue_export-helper.1tPrXgE0.js";
const __pageData = JSON.parse('{"title":"工具包文档","description":"","frontmatter":{"title":"工具包文档","type":"package","project":"utils","owner":"dev-team","created":"2025-10-13","updated":"2025-10-13","publish":true,"tags":["packages","utils"],"sidebar_label":"工具包","sidebar_order":2,"sidebar_group":"packages"},"headers":[],"relativePath":"packages/utils-overview.md","filePath":"packages/utils-overview.md","lastUpdated":1760420026000}');
const _sfc_main = { name: "packages/utils-overview.md" };
function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${ssrRenderAttrs(_attrs)}><h1 id="工具包文档" tabindex="-1">工具包文档 <a class="header-anchor" href="#工具包文档" aria-label="Permalink to &quot;工具包文档&quot;">​</a></h1><p>本部分包含了所有工具包的详细文档，提供核心业务逻辑工具函数和辅助方法</p><h2 id="工具列表" tabindex="-1">工具列表 <a class="header-anchor" href="#工具列表" aria-label="Permalink to &quot;工具列表&quot;">​</a></h2><h3 id="核心工具" tabindex="-1">核心工具 <a class="header-anchor" href="#核心工具" aria-label="Permalink to &quot;核心工具&quot;">​</a></h3><ul><li><strong><a href="/internal/archive/packages/utils/shared-core">共享核心</a></strong> - 核心业务逻辑，提供项目的基础功能</li><li><strong><a href="/internal/archive/packages/utils/use-crud">CRUD工具</a></strong> - CRUD操作的组合式函数，简化数据操作</li></ul><h3 id="基础工具" tabindex="-1">基础工具 <a class="header-anchor" href="#基础工具" aria-label="Permalink to &quot;基础工具&quot;">​</a></h3><ul><li><strong><a href="/internal/archive/packages/utils/shared-utils">共享工具</a></strong> - 工具函数和辅助方法，提供常用功能</li></ul><hr><h2 id="设计原则" tabindex="-1">设计原则 <a class="header-anchor" href="#设计原则" aria-label="Permalink to &quot;设计原则&quot;">​</a></h2><h3 id="_1-模块化" tabindex="-1">1. 模块化 <a class="header-anchor" href="#_1-模块化" aria-label="Permalink to &quot;1. 模块化&quot;">​</a></h3><ul><li>按功能划分模块</li><li>清晰的依赖关系</li><li>独立的版本管理</li></ul><h3 id="_2-可复用性" tabindex="-1">2. 可复用性 <a class="header-anchor" href="#_2-可复用性" aria-label="Permalink to &quot;2. 可复用性&quot;">​</a></h3><ul><li>通用的功能设计</li><li>灵活的配置选项</li><li>完整的类型支持</li></ul><h3 id="_3-性能优化" tabindex="-1">3. 性能优化 <a class="header-anchor" href="#_3-性能优化" aria-label="Permalink to &quot;3. 性能优化&quot;">​</a></h3><ul><li>按需加载机制</li><li>高效的算法实现</li><li>最小化包体积</li></ul><hr><h2 id="架构设计" tabindex="-1">架构设计 <a class="header-anchor" href="#架构设计" aria-label="Permalink to &quot;架构设计&quot;">​</a></h2><h3 id="分层架构" tabindex="-1">分层架构 <a class="header-anchor" href="#分层架构" aria-label="Permalink to &quot;分层架构&quot;">​</a></h3><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>shared-core (核心业务逻辑)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>shared-utils (工具函数)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>use-crud (CRUD组合式函数)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="依赖管理" tabindex="-1">依赖管理 <a class="header-anchor" href="#依赖管理" aria-label="Permalink to &quot;依赖管理&quot;">​</a></h3><ul><li>最小化外部依赖</li><li>版本锁定机制</li><li>兼容性保证</li></ul><hr><h2 id="安装使用" tabindex="-1">安装使用 <a class="header-anchor" href="#安装使用" aria-label="Permalink to &quot;安装使用&quot;">​</a></h2><h3 id="安装核心工具" tabindex="-1">安装核心工具 <a class="header-anchor" href="#安装核心工具" aria-label="Permalink to &quot;安装核心工具&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">pnpm</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> add</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> @btc/shared-core</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="安装工具函数" tabindex="-1">安装工具函数 <a class="header-anchor" href="#安装工具函数" aria-label="Permalink to &quot;安装工具函数&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">pnpm</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> add</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> @btc/shared-utils</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="使用示例" tabindex="-1">使用示例 <a class="header-anchor" href="#使用示例" aria-label="Permalink to &quot;使用示例&quot;">​</a></h3><div class="language-typescript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6A737D", "--shiki-dark": "#6A737D" })}">// 使用核心功能</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">import</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> { useCrud } </span><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">from</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> &#39;@btc/shared-core&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6A737D", "--shiki-dark": "#6A737D" })}">// 使用工具函数</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">import</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> { formatDate, debounce } </span><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">from</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> &#39;@btc/shared-utils&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6A737D", "--shiki-dark": "#6A737D" })}">// 使用CRUD组合式函数</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">import</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> { useCrud } </span><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">from</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> &#39;@btc/shared-core&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><hr><h2 id="开发工具" tabindex="-1">开发工具 <a class="header-anchor" href="#开发工具" aria-label="Permalink to &quot;开发工具&quot;">​</a></h2><h3 id="调试工具" tabindex="-1">调试工具 <a class="header-anchor" href="#调试工具" aria-label="Permalink to &quot;调试工具&quot;">​</a></h3><ul><li>完整的TypeScript类型</li><li>详细的错误信息</li><li>调试模式支持</li></ul><h3 id="测试工具" tabindex="-1">测试工具 <a class="header-anchor" href="#测试工具" aria-label="Permalink to &quot;测试工具&quot;">​</a></h3><ul><li>单元测试覆盖</li><li>集成测试支持</li><li>性能测试工具</li></ul><hr><h2 id="相关文档" tabindex="-1">相关文档 <a class="header-anchor" href="#相关文档" aria-label="Permalink to &quot;相关文档&quot;">​</a></h2><ul><li><a href="/internal/archive/packages/components/">组件包文档</a> - BTC组件库文档</li><li><a href="/internal/archive/packages/plugins/">插件包文档</a> - 插件系统文档</li></ul></div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("packages/utils-overview.md");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const utilsOverview = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender]]);
export {
  __pageData,
  utilsOverview as default
};
