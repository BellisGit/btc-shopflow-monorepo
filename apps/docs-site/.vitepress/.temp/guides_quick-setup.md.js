import { ssrRenderAttrs, ssrRenderStyle } from "vue/server-renderer";
import { useSSRContext } from "vue";
import { _ as _export_sfc } from "./plugin-vue_export-helper.1tPrXgE0.js";
const __pageData = JSON.parse('{"title":"快速设置指南 - 局域网访问文档中心","description":"","frontmatter":{"title":"快速设置指南 - 局域网访问文档中心","type":"guide","project":"btc-shopflow","owner":"dev-team","created":"2025-10-14","updated":"2025-10-14","publish":true,"tags":["overview","setup","network"],"sidebar_label":"快速设置","sidebar_order":2,"sidebar_group":"guides"},"headers":[],"relativePath":"guides/quick-setup.md","filePath":"guides/quick-setup.md","lastUpdated":1760420026000}');
const _sfc_main = { name: "guides/quick-setup.md" };
function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${ssrRenderAttrs(_attrs)}><h1 id="快速设置指南-局域网访问文档中心" tabindex="-1">快速设置指南 - 局域网访问文档中心 <a class="header-anchor" href="#快速设置指南-局域网访问文档中心" aria-label="Permalink to &quot;快速设置指南 - 局域网访问文档中心&quot;">​</a></h1><h2 id="问题" tabindex="-1">问题 <a class="header-anchor" href="#问题" aria-label="Permalink to &quot;问题&quot;">​</a></h2><p>当前文档中心只能通过 <code>localhost:8080</code> 访问，无法从局域网其他设备访问。</p><h2 id="解决方案" tabindex="-1">解决方案 <a class="header-anchor" href="#解决方案" aria-label="Permalink to &quot;解决方案&quot;">​</a></h2><h3 id="_1-修改-vite-配置" tabindex="-1">1. 修改 Vite 配置 <a class="header-anchor" href="#_1-修改-vite-配置" aria-label="Permalink to &quot;1. 修改 Vite 配置&quot;">​</a></h3><p>在主应用的 <code>vite.config.ts</code> 中修改服务器配置：</p><div class="language-typescript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">export</span><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}"> default</span><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}"> defineConfig</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">({</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">  server: {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">    host: </span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}">&#39;0.0.0.0&#39;</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">,  </span><span style="${ssrRenderStyle({ "--shiki-light": "#6A737D", "--shiki-dark": "#6A737D" })}">// 允许外部访问</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">    port: </span><span style="${ssrRenderStyle({ "--shiki-light": "#005CC5", "--shiki-dark": "#79B8FF" })}">8080</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">    strictPort: </span><span style="${ssrRenderStyle({ "--shiki-light": "#005CC5", "--shiki-dark": "#79B8FF" })}">true</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">  }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="_2-修改-vitepress-配置" tabindex="-1">2. 修改 VitePress 配置 <a class="header-anchor" href="#_2-修改-vitepress-配置" aria-label="Permalink to &quot;2. 修改 VitePress 配置&quot;">​</a></h3><p>在文档站点的 <code>.vitepress/config.ts</code> 中修改服务器配置：</p><div class="language-typescript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">export</span><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}"> default</span><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}"> defineConfig</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">({</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">  vite: {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">    server: {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">      host: </span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}">&#39;0.0.0.0&#39;</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">,  </span><span style="${ssrRenderStyle({ "--shiki-light": "#6A737D", "--shiki-dark": "#6A737D" })}">// 允许外部访问</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">      port: </span><span style="${ssrRenderStyle({ "--shiki-light": "#005CC5", "--shiki-dark": "#79B8FF" })}">8085</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">      strictPort: </span><span style="${ssrRenderStyle({ "--shiki-light": "#005CC5", "--shiki-dark": "#79B8FF" })}">true</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">    }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">  }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="_3-防火墙设置" tabindex="-1">3. 防火墙设置 <a class="header-anchor" href="#_3-防火墙设置" aria-label="Permalink to &quot;3. 防火墙设置&quot;">​</a></h3><p>确保 Windows 防火墙允许以下端口：</p><ul><li><code>8080</code> - 主应用端口</li><li><code>8085</code> - 文档站点端口</li></ul><h3 id="_4-网络访问" tabindex="-1">4. 网络访问 <a class="header-anchor" href="#_4-网络访问" aria-label="Permalink to &quot;4. 网络访问&quot;">​</a></h3><p>配置完成后，可以通过以下地址访问：</p><ul><li>主应用: <code>http://[你的IP]:8080</code></li><li>文档中心: <code>http://[你的IP]:8080/docs</code></li><li>文档站点: <code>http://[你的IP]:8085</code></li></ul><h2 id="验证步骤" tabindex="-1">验证步骤 <a class="header-anchor" href="#验证步骤" aria-label="Permalink to &quot;验证步骤&quot;">​</a></h2><ol><li><strong>检查配置</strong>: 确认配置文件已正确修改</li><li><strong>重启服务</strong>: 重启开发服务器</li><li><strong>测试访问</strong>: 从其他设备访问应用</li><li><strong>检查网络</strong>: 确认网络连接正常</li></ol><h2 id="常见问题" tabindex="-1">常见问题 <a class="header-anchor" href="#常见问题" aria-label="Permalink to &quot;常见问题&quot;">​</a></h2><h3 id="问题1-无法访问" tabindex="-1">问题1: 无法访问 <a class="header-anchor" href="#问题1-无法访问" aria-label="Permalink to &quot;问题1: 无法访问&quot;">​</a></h3><ul><li><strong>检查IP地址</strong>: 确认使用正确的IP地址</li><li><strong>检查防火墙</strong>: 确保防火墙允许端口访问</li><li><strong>检查服务状态</strong>: 确认服务正在运行</li></ul><h3 id="问题2-端口冲突" tabindex="-1">问题2: 端口冲突 <a class="header-anchor" href="#问题2-端口冲突" aria-label="Permalink to &quot;问题2: 端口冲突&quot;">​</a></h3><ul><li><strong>检查端口占用</strong>: <code>netstat -ano | findstr :8080</code></li><li><strong>修改端口</strong>: 在配置中指定其他端口</li><li><strong>终止进程</strong>: 终止占用端口的进程</li></ul><h2 id="安全注意事项" tabindex="-1">安全注意事项 <a class="header-anchor" href="#安全注意事项" aria-label="Permalink to &quot;安全注意事项&quot;">​</a></h2><ol><li><strong>开发环境</strong>: 此配置仅适用于开发环境</li><li><strong>生产环境</strong>: 生产环境需要更严格的安全配置</li><li><strong>访问控制</strong>: 考虑添加访问控制机制</li><li><strong>网络安全</strong>: 注意网络安全和防火墙设置</li></ol><hr><p><strong>适用环境</strong>: 开发环境 <strong>安全等级</strong>: 低（仅开发使用） <strong>维护团队</strong>: 开发团队</p></div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("guides/quick-setup.md");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const quickSetup = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender]]);
export {
  __pageData,
  quickSetup as default
};
