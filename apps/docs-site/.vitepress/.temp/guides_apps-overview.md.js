import { ssrRenderAttrs, ssrRenderStyle } from "vue/server-renderer";
import { useSSRContext } from "vue";
import { _ as _export_sfc } from "./plugin-vue_export-helper.1tPrXgE0.js";
const __pageData = JSON.parse('{"title":"应用目录说明","description":"","frontmatter":{"title":"应用目录说明","type":"guide","project":"btc-shopflow","owner":"dev-team","created":"2025-10-14","updated":"2025-10-14","publish":true,"tags":["overview","apps","micro-frontend"],"sidebar_label":"应用概览","sidebar_order":3,"sidebar_group":"guides"},"headers":[],"relativePath":"guides/apps-overview.md","filePath":"guides/apps-overview.md","lastUpdated":1760420026000}');
const _sfc_main = { name: "guides/apps-overview.md" };
function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${ssrRenderAttrs(_attrs)}><h1 id="应用目录说明" tabindex="-1">应用目录说明 <a class="header-anchor" href="#应用目录说明" aria-label="Permalink to &quot;应用目录说明&quot;">​</a></h1><p>本目录包含所有微前端应用</p><h2 id="应用列表" tabindex="-1">应用列表 <a class="header-anchor" href="#应用列表" aria-label="Permalink to &quot;应用列表&quot;">​</a></h2><h3 id="_1-main-app-主应用" tabindex="-1">1. main-app（主应用） <a class="header-anchor" href="#_1-main-app-主应用" aria-label="Permalink to &quot;1. main-app（主应用）&quot;">​</a></h3><ul><li><strong>端口</strong>：8080</li><li><strong>功能</strong>：系统管理权限配置qiankun容器</li><li><strong>特点</strong>：包含全局布局汉堡菜单应用切换器</li></ul><h3 id="_2-logistics-app-物流应用" tabindex="-1">2. logistics-app（物流应用） <a class="header-anchor" href="#_2-logistics-app-物流应用" aria-label="Permalink to &quot;2. logistics-app（物流应用）&quot;">​</a></h3><ul><li><strong>端口</strong>：8081</li><li><strong>功能</strong>：物流管理相关功能</li><li><strong>特点</strong>：独立的业务模块应用</li></ul><h3 id="_3-engineering-app-工程应用" tabindex="-1">3. engineering-app（工程应用） <a class="header-anchor" href="#_3-engineering-app-工程应用" aria-label="Permalink to &quot;3. engineering-app（工程应用）&quot;">​</a></h3><ul><li><strong>端口</strong>：8082</li><li><strong>功能</strong>：工程管理相关功能</li><li><strong>特点</strong>：独立的业务模块应用</li></ul><h3 id="_4-quality-app-质量应用" tabindex="-1">4. quality-app（质量应用） <a class="header-anchor" href="#_4-quality-app-质量应用" aria-label="Permalink to &quot;4. quality-app（质量应用）&quot;">​</a></h3><ul><li><strong>端口</strong>：8083</li><li><strong>功能</strong>：质量管理相关功能</li><li><strong>特点</strong>：独立的业务模块应用</li></ul><h3 id="_5-production-app-生产应用" tabindex="-1">5. production-app（生产应用） <a class="header-anchor" href="#_5-production-app-生产应用" aria-label="Permalink to &quot;5. production-app（生产应用）&quot;">​</a></h3><ul><li><strong>端口</strong>：8084</li><li><strong>功能</strong>：生产管理相关功能</li><li><strong>特点</strong>：独立的业务模块应用</li></ul><h3 id="_6-docs-site-文档站点" tabindex="-1">6. docs-site（文档站点） <a class="header-anchor" href="#_6-docs-site-文档站点" aria-label="Permalink to &quot;6. docs-site（文档站点）&quot;">​</a></h3><ul><li><strong>端口</strong>：8085</li><li><strong>功能</strong>：项目文档和技术文档</li><li><strong>特点</strong>：基于VitePress的文档系统</li></ul><h2 id="微前端架构" tabindex="-1">微前端架构 <a class="header-anchor" href="#微前端架构" aria-label="Permalink to &quot;微前端架构&quot;">​</a></h2><h3 id="qiankun框架" tabindex="-1">qiankun框架 <a class="header-anchor" href="#qiankun框架" aria-label="Permalink to &quot;qiankun框架&quot;">​</a></h3><ul><li><strong>主应用</strong>: main-app作为容器应用</li><li><strong>子应用</strong>: 各业务应用作为独立应用</li><li><strong>通信</strong>: 通过qiankun的通信机制</li></ul><h3 id="独立开发" tabindex="-1">独立开发 <a class="header-anchor" href="#独立开发" aria-label="Permalink to &quot;独立开发&quot;">​</a></h3><ul><li><strong>技术栈</strong>: 每个应用可以独立选择技术栈</li><li><strong>部署</strong>: 支持独立部署和更新</li><li><strong>团队</strong>: 支持多团队并行开发</li></ul><h2 id="开发指南" tabindex="-1">开发指南 <a class="header-anchor" href="#开发指南" aria-label="Permalink to &quot;开发指南&quot;">​</a></h2><h3 id="启动所有应用" tabindex="-1">启动所有应用 <a class="header-anchor" href="#启动所有应用" aria-label="Permalink to &quot;启动所有应用&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">pnpm</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> dev</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="启动单个应用" tabindex="-1">启动单个应用 <a class="header-anchor" href="#启动单个应用" aria-label="Permalink to &quot;启动单个应用&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">pnpm</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> dev:main</span><span style="${ssrRenderStyle({ "--shiki-light": "#6A737D", "--shiki-dark": "#6A737D" })}">      # 主应用</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">pnpm</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> dev:logistics</span><span style="${ssrRenderStyle({ "--shiki-light": "#6A737D", "--shiki-dark": "#6A737D" })}"> # 物流应用</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">pnpm</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> dev:docs</span><span style="${ssrRenderStyle({ "--shiki-light": "#6A737D", "--shiki-dark": "#6A737D" })}">      # 文档站点</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="构建应用" tabindex="-1">构建应用 <a class="header-anchor" href="#构建应用" aria-label="Permalink to &quot;构建应用&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">pnpm</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> build:all</span><span style="${ssrRenderStyle({ "--shiki-light": "#6A737D", "--shiki-dark": "#6A737D" })}">     # 构建所有应用</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">pnpm</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> build:main</span><span style="${ssrRenderStyle({ "--shiki-light": "#6A737D", "--shiki-dark": "#6A737D" })}">    # 构建主应用</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><hr><p><strong>架构类型</strong>: 微前端 <strong>框架</strong>: qiankun <strong>维护团队</strong>: 前端团队</p></div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("guides/apps-overview.md");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const appsOverview = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender]]);
export {
  __pageData,
  appsOverview as default
};
